
/* Allocating storage for function 'main' */
/* variable 'i' allocated vreg 10 */
/* variable 'j' allocated vreg 11 */
/* variable 'n' allocated vreg 12 */
/* variable 'm' allocated 400 bytes of storage at offset 0 */
/* Function 'main' uses 400 bytes of memory and 13 virtual registers */

	.section .text

	.globl main
main:
	enter    $400
	mov_l    vr13, $0
	mov_l    vr10, vr13
	jmp      .L1
.L0:
	mov_l    vr14, $0
	mov_l    vr12, vr14
	mov_l    vr15, $0
	mov_l    vr11, vr15
	jmp      .L3
.L2:
	localaddr vr16, $0
	sconv_lq vr17, vr10
	mul_q    vr18, vr17, $40
	add_q    vr19, vr16, vr18
	sconv_lq vr20, vr11
	mul_q    vr21, vr20, $4
	add_q    vr22, vr19, vr21
	mov_l    (vr22), vr12
	add_l    vr23, vr12, vr10
	mov_l    vr12, vr23
	mov_l    vr24, $1
	add_l    vr25, vr11, vr24
	mov_l    vr11, vr25
.L3:
	mov_l    vr26, $9
	cmplte_l vr27, vr11, vr26
	cjmp_t   vr27, .L2
	mov_l    vr28, $1
	add_l    vr29, vr10, vr28
	mov_l    vr10, vr29
.L1:
	mov_l    vr30, $9
	cmplte_l vr31, vr10, vr30
	cjmp_t   vr31, .L0
	mov_l    vr32, $0
	mov_l    vr10, vr32
	jmp      .L5
.L4:
	mov_l    vr33, $0
	mov_l    vr11, vr33
	jmp      .L7
.L6:
	localaddr vr34, $0
	sconv_lq vr35, vr10
	mul_q    vr36, vr35, $40
	add_q    vr37, vr34, vr36
	sconv_lq vr38, vr11
	mul_q    vr39, vr38, $4
	add_q    vr40, vr37, vr39
	mov_l    vr1, (vr40)
	call     print_i32
	call     print_space
	mov_l    vr41, $1
	add_l    vr42, vr11, vr41
	mov_l    vr11, vr42
.L7:
	mov_l    vr43, $9
	cmplte_l vr44, vr11, vr43
	cjmp_t   vr44, .L6
	call     print_nl
	mov_l    vr45, $1
	add_l    vr46, vr10, vr45
	mov_l    vr10, vr46
.L5:
	mov_l    vr47, $9
	cmplte_l vr48, vr10, vr47
	cjmp_t   vr48, .L4
	mov_l    vr49, $0
	mov_l    vr0, vr49
	jmp      .Lmain_return
.Lmain_return:
	leave    $400
	ret      
