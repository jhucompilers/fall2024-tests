
/* Allocating storage for function 'read_m10x10' */
/* variable 'arr' allocated vreg 10 */
/* variable 'i' allocated vreg 11 */
/* Function 'read_m10x10' uses 0 bytes of memory and 12 virtual registers */

/* Allocating storage for function 'main' */
/* variable 'a' allocated 800 bytes of storage at offset 0 */
/* variable 'b' allocated 800 bytes of storage at offset 800 */
/* variable 'c' allocated 800 bytes of storage at offset 1600 */
/* variable 'M' allocated vreg 10 */
/* variable 'i' allocated vreg 11 */
/* variable 'j' allocated vreg 12 */
/* variable 'k' allocated vreg 13 */
/* variable 'r' allocated vreg 14 */
/* variable 'val' allocated vreg 15 */
/* Function 'main' uses 2400 bytes of memory and 16 virtual registers */

	.section .text

	.globl read_m10x10
read_m10x10:
	enter    $0
	mov_q    vr10, vr1
	mov_l    vr12, $0
	mov_l    vr11, vr12
	jmp      .L1
.L0:
	call     read_i64
	mov_q    vr13, vr0
	sconv_lq vr14, vr11
	mul_q    vr15, vr14, $8
	add_q    vr16, vr10, vr15
	mov_q    (vr16), vr13
	mov_l    vr17, $1
	add_l    vr18, vr11, vr17
	mov_l    vr11, vr18
.L1:
	mov_l    vr19, $100
	cmplt_l  vr20, vr11, vr19
	cjmp_t   vr20, .L0
	jmp      .Lread_m10x10_return
.Lread_m10x10_return:
	leave    $0
	ret      

	.globl main
main:
	enter    $2400
	mov_l    vr16, $10
	mov_l    vr10, vr16
	localaddr vr17, $0
	mov_q    vr1, vr17
	call     read_m10x10
	localaddr vr18, $800
	mov_q    vr1, vr18
	call     read_m10x10
	mov_l    vr19, $0
	mov_l    vr11, vr19
	jmp      .L3
.L2:
	mov_q    vr20, $0
	localaddr vr21, $1600
	sconv_lq vr22, vr11
	mul_q    vr23, vr22, $8
	add_q    vr24, vr21, vr23
	mov_q    (vr24), vr20
	mov_l    vr25, $1
	add_l    vr26, vr11, vr25
	mov_l    vr11, vr26
.L3:
	mov_l    vr27, $100
	cmplt_l  vr28, vr11, vr27
	cjmp_t   vr28, .L2
	mov_l    vr29, $0
	mov_l    vr13, vr29
	jmp      .L5
.L4:
	mov_l    vr30, $0
	mov_l    vr11, vr30
	jmp      .L7
.L6:
	localaddr vr31, $0
	mul_l    vr32, vr11, vr10
	add_l    vr33, vr32, vr13
	sconv_lq vr34, vr33
	mul_q    vr35, vr34, $8
	add_q    vr36, vr31, vr35
	mov_q    vr37, (vr36)
	mov_q    vr14, vr37
	mov_l    vr38, $0
	mov_l    vr12, vr38
	jmp      .L9
.L8:
	localaddr vr39, $1600
	mul_l    vr40, vr11, vr10
	add_l    vr41, vr40, vr12
	sconv_lq vr42, vr41
	mul_q    vr43, vr42, $8
	add_q    vr44, vr39, vr43
	mov_q    vr45, (vr44)
	mov_q    vr15, vr45
	localaddr vr46, $800
	mul_l    vr47, vr13, vr10
	add_l    vr48, vr47, vr12
	sconv_lq vr49, vr48
	mul_q    vr50, vr49, $8
	add_q    vr51, vr46, vr50
	mov_q    vr53, (vr51)
	mul_q    vr52, vr14, vr53
	add_q    vr54, vr15, vr52
	mov_q    vr15, vr54
	localaddr vr55, $1600
	mul_l    vr56, vr11, vr10
	add_l    vr57, vr56, vr12
	sconv_lq vr58, vr57
	mul_q    vr59, vr58, $8
	add_q    vr60, vr55, vr59
	mov_q    (vr60), vr15
	mov_l    vr61, $1
	add_l    vr62, vr12, vr61
	mov_l    vr12, vr62
.L9:
	cmplt_l  vr63, vr12, vr10
	cjmp_t   vr63, .L8
	mov_l    vr64, $1
	add_l    vr65, vr11, vr64
	mov_l    vr11, vr65
.L7:
	cmplt_l  vr66, vr11, vr10
	cjmp_t   vr66, .L6
	mov_l    vr67, $1
	add_l    vr68, vr13, vr67
	mov_l    vr13, vr68
.L5:
	cmplt_l  vr69, vr13, vr10
	cjmp_t   vr69, .L4
	mov_l    vr70, $0
	mov_l    vr11, vr70
	jmp      .L11
.L10:
	localaddr vr71, $1600
	sconv_lq vr72, vr11
	mul_q    vr73, vr72, $8
	add_q    vr74, vr71, vr73
	mov_q    vr1, (vr74)
	call     print_i64
	call     print_nl
	mov_l    vr75, $1
	add_l    vr76, vr11, vr75
	mov_l    vr11, vr76
.L11:
	mov_l    vr77, $100
	cmplt_l  vr78, vr11, vr77
	cjmp_t   vr78, .L10
	mov_l    vr79, $0
	mov_l    vr0, vr79
	jmp      .Lmain_return
.Lmain_return:
	leave    $2400
	ret      
