
/* Allocating storage for function 'swap' */
/* variable 'arr' allocated vreg 10 */
/* variable 'i' allocated vreg 11 */
/* variable 'j' allocated vreg 12 */
/* variable 'tmp' allocated vreg 13 */
/* Function 'swap' uses 0 bytes of memory and 14 virtual registers */
/* allocate machine register %rbx to variable 'arr' (vr10), rank is 4 */
/* allocate machine register %r12 to variable 'i' (vr11), rank is 2 */
/* allocate machine register %r13 to variable 'j' (vr12), rank is 2 */
/* allocate machine register %r14 to variable 'tmp' (vr13), rank is 2 */

/* Allocating storage for function 'bubble' */
/* variable 'arr' allocated vreg 10 */
/* variable 'n' allocated vreg 11 */
/* variable 'i' allocated vreg 12 */
/* variable 'tmp' allocated vreg 13 */
/* Function 'bubble' uses 0 bytes of memory and 14 virtual registers */
/* allocate machine register %rbx to variable 'i' (vr12), rank is 141 */
/* allocate machine register %r12 to variable 'arr' (vr10), rank is 60 */
/* allocate machine register %r13 to variable 'n' (vr11), rank is 20 */

/* Allocating storage for function 'main' */
/* variable 'a' allocated 20 bytes of storage at offset 0 */
/* variable 'i' allocated vreg 10 */
/* Function 'main' uses 20 bytes of memory and 11 virtual registers */
/* allocate machine register %rbx to variable 'i' (vr10), rank is 81 */

	.section .text

	.globl swap
swap:
	enter    $0
	sconv_lq vr14<%r9>, vr2
	mul_q    vr15<%r8>, vr14<%r9>, $4
	add_q    vr16<%rcx>, vr1, vr15<%r8>
	mov_l    vr17<%r9d>, (vr16<%ecx>)
	sconv_lq vr18<%r8>, vr3
	spill_q  vr17<%r9>, $0
	mul_q    vr19<%r9>, vr18<%r8>, $4
	add_q    vr20<%r8>, vr1, vr19<%r9>
	mov_l    vr24<%r9d>, (vr20<%r8d>)
	mov_l    (vr16<%ecx>), vr24<%r9d>
	restore_q vr17<%rcx>, $0
	mov_l    (vr20<%r8d>), vr17<%ecx>
	jmp      .Lswap_return
.Lswap_return:
	leave    $0
	ret      

	.globl bubble
bubble:
	enter    $0
	mov_q    vr10, vr1
	mov_l    vr11, vr2
	mov_l    vr12, $1
	jmp      .L1
.L0:
	sconv_lq vr14<%r9>, vr12
	mul_q    vr15<%r8>, vr14<%r9>, $4
	add_q    vr16<%rcx>, vr10, vr15<%r8>
	sub_l    vr18<%r9d>, vr12, $1
	sconv_lq vr19<%r8>, vr18<%r9d>
	mul_q    vr20<%r9>, vr19<%r8>, $4
	add_q    vr21<%r8>, vr10, vr20<%r9>
	mov_l    vr23<%r9d>, (vr16<%ecx>)
	mov_l    vr24<%ecx>, (vr21<%r8d>)
	cmplt_l  vr22<%r8d>, vr23<%r9d>, vr24<%ecx>
	cjmp_f   vr22<%r8d>, .L2
	mov_q    vr1, vr10
	sub_l    vr15<%r9d>, vr12, $1
	mov_l    vr2, vr15<%r9d>
	mov_l    vr3, vr12
	call     swap
.L2:
	add_l    vr17<%r9d>, vr12, $1
	mov_l    vr12, vr17<%r9d>
.L1:
	cmplt_l  vr18<%r9d>, vr12, vr11
	cjmp_t   vr18<%r9d>, .L0
	jmp      .Lbubble_return
.Lbubble_return:
	leave    $0
	ret      

	.globl main
main:
	enter    $20
	localaddr vr12<%r9>, $0
	add_q    vr16<%r8>, vr12<%r9>, $0
	mov_l    (vr16<%r8d>), $52
	add_q    vr22<%rcx>, vr12<%r9>, $4
	mov_l    (vr22<%ecx>), $31
	add_q    vr28<%rdx>, vr12<%r9>, $8
	mov_l    (vr28<%edx>), $8
	add_q    vr34<%r8>, vr12<%r9>, $12
	mov_l    (vr34<%r8d>), $41
	add_q    vr40<%rcx>, vr12<%r9>, $16
	mov_l    (vr40<%ecx>), $75
	mov_q    vr1, vr12<%r9>
	mov_l    vr2, $5
	call     bubble
	mov_l    vr10, $0
	jmp      .L4
.L3:
	localaddr vr11<%r9>, $0
	sconv_lq vr12<%r8>, vr10
	mul_q    vr13<%rcx>, vr12<%r8>, $4
	add_q    vr14<%rdx>, vr11<%r9>, vr13<%rcx>
	mov_l    vr1, (vr14<%edx>)
	call     print_i32
	call     print_nl
	add_l    vr16<%r9d>, vr10, $1
	mov_l    vr10, vr16<%r9d>
.L4:
	cmplt_l  vr18<%r9d>, vr10, $5
	cjmp_t   vr18<%r9d>, .L3
	mov_l    vr0, $0
	jmp      .Lmain_return
.Lmain_return:
	leave    $20
	ret      
