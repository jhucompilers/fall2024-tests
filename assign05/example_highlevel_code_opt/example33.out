
/* Allocating storage for function 'fib' */
/* variable 'n' allocated vreg 10 */
/* variable 'a' allocated vreg 11 */
/* variable 'b' allocated vreg 12 */
/* variable 'c' allocated vreg 13 */
/* variable 'i' allocated vreg 14 */
/* Function 'fib' uses 0 bytes of memory and 15 virtual registers */
/* allocate machine register %rbx to variable 'b' (vr12), rank is 62 */
/* allocate machine register %r12 to variable 'i' (vr14), rank is 42 */
/* allocate machine register %r13 to variable 'a' (vr11), rank is 41 */
/* allocate machine register %r14 to variable 'c' (vr13), rank is 40 */
/* allocate machine register %r15 to variable 'n' (vr10), rank is 3 */

/* Allocating storage for function 'main' */
/* variable 'n' allocated vreg 10 */
/* Function 'main' uses 0 bytes of memory and 11 virtual registers */
/* allocate machine register %rbx to variable 'n' (vr10), rank is 4 */

	.section .text

	.globl fib
fib:
	enter    $0
	mov_l    vr10, vr1
	cmplte_l vr16<%r9d>, vr1, $1
	cjmp_f   vr16<%r9d>, .L0
	mov_l    vr0, vr10
	jmp      .Lfib_return
.L0:
	mov_l    vr11, $0
	mov_l    vr12, $1
	mov_l    vr14, $2
	jmp      .L2
.L1:
	add_l    vr15<%r9d>, vr11, vr12
	mov_l    vr11, vr12
	mov_l    vr12, vr15<%r9d>
	add_l    vr17<%r8d>, vr14, $1
	mov_l    vr14, vr17<%r8d>
.L2:
	cmplte_l vr18<%r9d>, vr14, vr10
	cjmp_t   vr18<%r9d>, .L1
	mov_l    vr0, vr12
	jmp      .Lfib_return
.Lfib_return:
	leave    $0
	ret      

	.globl main
main:
	enter    $0
	call     read_i32
	mov_l    vr1, vr0
	call     fib
	mov_l    vr1, vr0
	call     print_i32
	call     print_nl
	mov_l    vr0, $0
	jmp      .Lmain_return
.Lmain_return:
	leave    $0
	ret      
